services:
  exporter:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMMAND: "exporter"
    ports:
      - "8080:8080"
    environment:
      - HDE_EXPOSE_ADDRESS=:8080
    restart: always
  prometheus:
    image: prom/prometheus
    volumes:
      - ./utils/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  grafana:
      image: grafana/grafana-oss
      ports:
      - 3000:3000
      volumes:
      # - ./utils/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./utils/dashboards:/var/lib/grafana/dashboards:ro
      - ./utils/prom-datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml:ro
      environment:
        - "GF_AUTH_DISABLE_LOGIN_FORM=true"
        - "GF_AUTH_ANONYMOUS_ENABLED=true"
        - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
        - "GF_INSTALL_PLUGINS=grafana-polystat-panel"
  db:
    profiles:
      - sync
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data/pgdata
  sync:
    profiles:
      - sync
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMMAND: "sync"
    environment:
      - HDE_POSTGRES_URL="postgres://app_user:password@db:5432/app_db?sslmode=disable"
      - HDE_MIGRATIONS_DIR=/migrations
    volumes:
      - ./pkg/migrations:/migrations
    restart: always
volumes:
  prometheus-data: {}
  postgres-data: {}
